@model List<RestaurantTable>
@{
    ViewData["Title"] = "Cashier Page";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
    @if (TempData["Message"] != null)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                toastr.success('@TempData["Message"]');
            });
        </script>
    }
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>POS System</title>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
        }

        .container {
            display: flex;
            width: 100%;
            height: 100vh;
        }

        .tables {
            flex: 60%;
            padding: 20px;
            display: flex;
            flex-wrap: wrap;
            align-content: flex-start;
            background-color: #f5f5f5;
        }

        .table {
            width: 100px;
            height: 100px;
            margin: 10px;
            background-color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            cursor: pointer;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .table:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(0,0,0,0.2);
            }

        .orders {
            flex: 40%;
            padding: 20px;
            background-color: #e5e5e5;
            overflow-y: auto;
        }

       
        .approve-payment-btn {
            background-color: #008CBA; /* Blue background */
            color: white; /* White text */
            padding: 10px 20px; /* Padding around text */
            border: none; /* Remove border */
            cursor: pointer; /* Cursor indicates clickable */
            border-radius: 5px; /* Rounded corners */
            font-size: 16px; /* Larger font size for visibility */
            transition: background-color 0.3s; /* Smooth background color transition on hover */
            position: absolute;
            right: 20px;
            bottom: 20px;
        }

            .approve-payment-btn:hover {
                background-color: #007B9C; /* Darker blue on hover for visual feedback */
            }

        .container, .tables {
            position: relative; /* Needed for absolute positioning within */
        }


        .total-cost {
            margin-right: 20px; /* Space between the total cost and the button */
            font-size: 20px; /* Larger font size for visibility */
        }

    </style>
</head>
<body>
    <div class="container">
        <div class="tables">
            @foreach (var table in Model)
            {
                <div class="table" data-table-id="@table.TableId" onclick="loadOrdersForTable(@table.TableId)" style="background-color: @(table.Occupancy == 1 ? "#ffcccc" : "#ccffcc");">
                    <div>@table.TableName</div>
                    <div>Capacity: @table.Capacity</div>
                </div>
            }
            <button class="approve-payment-btn" onclick="approvePayment()">Approve Payment</button>

        </div>
        
        <div class="orders">
            <!-- Order items will be loaded here -->
            
        </div>
       
    </div>

    
    </div>
    
    <script>
        let currentTableId = 0;
        function loadOrdersForTable(tableId) {
            currentTableId = tableId;
            fetch(`/Cashier/GetAllOrderDetailsForTable?tableId=${tableId}`)
                .then(response => response.text()) // Expecting HTML response
                .then(html => {
                    const ordersContainer = document.querySelector('.orders');
                    ordersContainer.innerHTML = html; // Insert the HTML directly
                })
                .catch(error => console.error('Error loading orders:', error));
        }


       

        function approvePayment() {
           
            var tableId = currentTableId;
            console.log(currentTableId);
           
            const numericTableId = Number(currentTableId);

            fetch(`/Cashier/ApprovePayment?tableId=${numericTableId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'

                },

            })
                .then(response => {
                    if (response.ok) {

                        loadOrdersForTable(numericTableId);
                    } else {
                        alert("Failed to approve order.");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("An error occurred while approving the order.");
                });
        }

        function cancelOrder(element) {
            // Retrieve the orderItemId from the data-order-item-id attribute
            var orderItemId = element.getAttribute('data-order-item-id');
            var tableId = element.getAttribute('data-table-id');

            const trimmedOrderId = orderItemId.trim();
            const numericOrderId = Number(trimmedOrderId);

            const trimmedTableId = tableId.trim();
            const numericTableId = Number(trimmedTableId);

            fetch(`/Server/CancelOrderItemByOrderItemId?orderItemId=${numericOrderId}`, {
                method: 'DELETE'
            })

                .then(response => {
                    console.log(response)
                    if (response.ok) {

                        loadOrdersForTable(numericTableId);
                    } else {
                        alert("Failed to cancel order.");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("An error occurred while approving the order.");
                });
        }
    </script>


</body>

</html>
